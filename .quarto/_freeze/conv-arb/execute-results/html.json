{
  "hash": "309313301ed3cbeb82de293d8613652a",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Implementation for Measuring the Arbitrariness of Conventions\nauthors:\n  - name: YAMAMOTO, Takanori\ndate: 2024-10-10\nbibliography: references.bib\n---\n\n\n\nConventions can admit a degree of arbitrariness. @oconnor2020measuring proposed a measure of the degree of arbitrariness. The program here is a trial implementation of it.\n\nja: 慣例は恣意性の程度を認めることができる。@oconnor2020measuring は, その恣意性の度合いを測る尺度を提案した。ここのプログラムは, それを試しに実装したものある。\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code .code-overflow-scroll  code-summary=\"code-fold\" code-line-numbers=\"true\"}\n# Here, we measure the degree of arbitrariness of conventions\n# A function to calculate entropy\n#| label: measure-of-arbitrariness\nentropy <- function(probabilities) {\n  # Calculate the information content I(x_i)\n  information_content <- -log2(probabilities)\n  \n  # Calculate the entropy H(x)\n  entropy_value <- sum(probabilities * information_content)\n  return(entropy_value)\n}\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code .code-overflow-scroll  code-summary=\"code-fold\" code-line-numbers=\"true\"}\n# Probabilities of each convention, basin of attraction\n# Below is an input example, with the basin of attraction from the author's simulation.\nprobabilities <- c(0.113709, 0.33434, 0.185575, 0.166355, 0.200022)\nentropy_value <- entropy(probabilities)\nprint(entropy_value)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2.230929\n```\n\n\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.py .cell-code .code-overflow-scroll  code-summary=\"code-fold\" code-line-numbers=\"true\"}\nimport math\n\n# Function to calculate entropy\ndef entropy(probabilities):\n    # Calculate the information content I(x_i)\n    information_content = [-math.log2(p) for p in probabilities]\n    \n    # Calculate the entropy H(x)\n    entropy_value = sum(p * i for p, i in zip(probabilities, information_content))\n    return entropy_value\n\n# Probabilities of each convention, basin of attraction\n# Below is an input example, with the basin of attraction from the author's simulation.\nprobabilities = [0.113709, 0.33434, 0.185575, 0.166355, 0.200022]\nentropy_value = entropy(probabilities)\nprint(entropy_value)\n```\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}